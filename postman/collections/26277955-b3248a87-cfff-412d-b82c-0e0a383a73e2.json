					"description": "View system health events related to selected entities.\n\n| Name               | Type     | Description                                                               |\n|--------------------|----------|---------------------------------------------------------------------------|\n| HealthEventId      | int      | The unique identifier for the health event.                              |\n| EventSourceTypeId  | int      | The identifier for the event source type.                                |\n| SourceEntityGuid   | Guid     | The unique identifier of the source entity associated with the event.    |\n| EventDescription   | string   | A description of the event.                                              |\n| MachineName        | string   | The name of the machine where the event occurred.                        |\n| Timestamp          | DateTime | The UTC timestamp indicating when the event occurred.                    |\n| SeverityId         | int      | The severity level of the event.                      |\n| ErrorNumber        | int      | The error number associated with the event.                              |\n| Occurrence          | long     | The occurrence number of the event.                                      |\n| ObserverEntity     | Guid     | The unique identifier of the observer entity monitoring the event.       |\n"
							"description": "Investigate events on selected intrusion detection units (AC fail, Battery fail, and so on).\n\n| Name             | Type     | Description                                                                                  |\n|------------------|----------|----------------------------------------------------------------------------------------------|\n| Timestamp        | DateTime | The UTC timestamp indicating when the event occurred.                                        |\n| EventType        | int      | The type of event that was triggered                        |\n| IntrusionUnitId  | Guid     | The unique identifier of the intrusion unit associated with the event.                       |\n| IntrusionAreaId  | Guid     | The unique identifier of the intrusion area where the event occurred.                        |\n| DeviceId         | Guid     | The unique identifier of the device involved in the event.                                   |\n| SourceGuid       | Guid     | The unique identifier of the source entity that generated the event.                         |\n| OccurrencePeriod  | int      | The offline period             |\n| TimeZoneId       | string   | The time zone identifier of the source\n| UserId           | Guid     | The unique identifier of the user associated with the event, if applicable.                  |\n| CardholderId     | Guid     | The unique identifier of the cardholder associated with the event, if applicable.            |\n| Initiator        | Guid     | The unique identifier of the entity that initiated or caused the event.                      |\n"
							"description": "| Name             | Type     | Description                                                                                  |\n|------------------|----------|----------------------------------------------------------------------------------------------|\n| Timestamp        | DateTime | The UTC timestamp indicating when the event occurred.                                        |\n| EventType        | int      | The type of event that occurred\n| IntrusionUnitId  | Guid     | The unique identifier of the intrusion unit involved in the event.                           |\n| IntrusionAreaId  | Guid     | The unique identifier of the intrusion area where the event occurred.                        |\n| DeviceId         | Guid     | The unique identifier of the device associated with the event.                               |\n| SourceGuid       | Guid     | The unique identifier of the source entity responsible for generating the event.             |\n| OccurrencePeriod  | int      | The offline period type    |\n| TimeZoneId       | string   | The identifier of the source's time zone                          |\n| UserId           | Guid     | The unique identifier of the user associated with the event, if applicable.                  |\n| CardholderId     | Guid     | The unique identifier of the cardholder linked to the event, if applicable.                  |\n| Initiator        | Guid     | The unique identifier of the entity that initiated or caused the event.                      |\n"
											"description": "A comma separated list of GUID"
			"description": "In the context of Security Center, an event indicates the occurrence of an activity or incident, such as access denied to a cardholder or motion detected on a camera.  \nEvents are automatically logged in Security Center.  \nEvery event has an entity as its main focus, called the event source.\n\n### How to monitor events in real-time\n\nTo monitor events, you must first subscribe to one or more events.  \nYou can subscribe to events raised by specific entities or raised by all entities.\n\nTo subscribe to events from a specific entity, send the following GET request:\n\n``` http\nGET /events/subscribe?q=event({source},{eventType})\n\n ```\n\nSimply replace {source} with either the GUID or the logical ID of an entity to receive events for that specific entity.\n\nTo subscribe to events from all entities of a given type, send the following GET request:\n\n``` http\nGET /events/subscribe?q=event({entityType},{eventType})\n\n ```\n\nSimply replace {entityType} with the type of entity you wish to receive event from.\n\n:bulb: **You can combine multiple subscriptions into a single request.**\n\n``` http\nPOST /events/subscribe?q=event({source1},{eventType1}),event({source2},{eventType2}),event({source3},{eventType3})\n\n ```\n\n:warning: **Subscribing to specific custom events only is not supported.**\n\nSimilarly, to unsubscribe, send the following GET request:\n\n``` http\nGET /events/unsubscribe?q=event({source},{eventType})\n\n ```\n\nTo retrieve the list of all event subscriptions, send the following GET request:\n\n``` http\nGET /events/subscribed\n\n ```\n\nHere is an example of the response:\n\n``` json\n{\n    \"Rsp\": {\n        \"Status\": \"Ok\",\n        \"Result\": [\n            {\n                \"EventType\": \"CameraMotion\",\n                \"Entities\": [\n                    \"00000001-0000-babe-0000-7a825fe95e6d\",\n                    \"00000001-0000-babe-0000-07f70b10c103\",\n                    \"4bf63e7e-4973-4d7f-8437-74e742a6a856\",\n                    \"00000001-0000-babe-0000-6ec222f7f57e\",\n                    \"00000001-0000-babe-0000-c5bf77d09e2a\",\n                    \"00000001-0000-babe-0000-02e7a5cd8df8\",\n                    \"00000001-0000-babe-0000-51b6928e57d4\",\n                    \"00000001-0000-babe-0000-201b16db264a\"\n                ]\n            },\n            {\n                \"EventType\": \"AccessGranted\",\n                \"Entities\": [\n                    \"bb29039d-aa1a-4c35-aa1e-4f89c6006b6d\"\n                ]\n            }\n        ]\n    }\n}\n\n ```\n\nTo open the HTTP events stream, send the following GET request:\n\n``` http\nGET /events/\n\n ```\n\nThe request will then be redirected to the streaming port (default is 4591)\n\n### How does HTTP event streaming work\n\nHere is a general overview of how the web SDK sends real-time events:\n\nThe client initiates an HTTP connection to the server using a standard HTTP GET request.\n\nThe server redirects the request to the streaming port and responds with an HTTP response that includes the Content-Type: multipart/mixed header, specifying the boundary string (--GENETECBOUNDARY).  \nThis indicates that the server will be sending a multipart stream of events.\n\nThe server starts streaming individual event messages as separate parts of the multipart response.  \nEach event is encapsulated within a part and separated by the specified boundary.\n\nEach event part typically includes content specific to the event, such as the event type, timestamp, and event data.\n\nThe server continues streaming events as long as the connection remains open.  \nNew events are sent by the server as soon as they occur, allowing for real-time delivery of events to the client.\n\nThe client receives the event parts one by one as they are streamed.  \nThe client can process each event as it arrives, react to the event data, and take appropriate actions.  \nIt's worth noting that the client needs to handle the parsing and extraction of individual event parts based on the specified boundary.\n\nHere is an example of the HTTP requests and responses:\n\n``` http\nGET /WebSdk/events HTTP/1.1\nAccept: text/json\nAuthorization: Basic YWRtaW47S3hzRDExejc0M0hmNUdxOW12Mys1ZWt4emVtbENpVVhrVEZZNWJhMU5PR2NMQ21Hc3R0Mm4wellFOU5zTmltdjo=\nHost: localhost:4590\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\nHTTP/1.1 301 Moved Permanently\nContent-Length: 0\nLocation: http://localhost:4591/WebSdk/streaming/events/sessionid=pvbSQDRUjmUohQd6zkOjLnUSiZaTzTbu8UIUSzENK7o=\nServer: Microsoft-HTTPAPI/2.0\nDate: Thu, 24 Aug 2023 08:26:58 GMT\nGET /WebSdk/streaming/events/sessionid=pvbSQDRUjmUohQd6zkOjLnUSiZaTzTbu8UIUSzENK7o= HTTP/1.1\nAccept: text/json\nAuthorization: Basic YWRtaW47S3hzRDExejc0M0hmNUdxOW12Mys1ZWt4emVtbENpVVhrVEZZNWJhMU5PR2NMQ21Hc3R0Mm4wellFOU5zTmltdjo=\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\nReferer: http://localhost:4590/WebSdk/events\nHost: localhost:4591\nHTTP/1.0 200\nExpires: Thu, 1 Jan 1998 00:00:00 GMT\nConnectionId: f72c2424-f3b7-487e-88f9-fbcc43ac9665\nContent-type: multipart/mixed; boundary=--GENETECBOUNDARY\n--GENETECBOUNDARY\nContent-type: */*\n{\"alarmtriggered\": {\n\"AlarmGuid\":\"016d83f88b38490289d2d36411fa968a\",\n\"CreationTimestamp\":\"2023-05-02T08:38:16.1747110Z\",\n\"InstanceId\":\"27\",\n\"OfflinePeriod\":\"None\",\n\"PropagationLevel\":\"0\",\n\"HasSourceCondition\":\"False\",\n\"SourceGuid\":\"f578a324a7b748e48b6a21932207cf85\",\n\"SourceName\":\"In\",\n\"TriggerEvent\":\"AccessGranted\",\n\"TriggerTimestamp\":\"2023-05-02T08:38:16.1827165Z\",\n\"DynamicAlarmContent\":\"\"\n}}\n--GENETECBOUNDARY\nContent-type: */*\n{\"event\": {\n\"CardholderGuid\":\"872625a5a21e4897ba1006519021d960\",\n\"WrongPin\":\"\",\n\"AccessPointGuid\":\"f578a324a7b748e48b6a21932207cf85\",\n\"CredentialGuid\":\"97e182ca481443dea87fdd9283f24ff5\",\n\"DoorSideGuid\":\"f578a324a7b748e48b6a21932207cf85\",\n\"Event\": {\n\"Cardholder\":\"872625a5a21e4897ba1006519021d960\",\n\"ConditionalGuid\":\"872625a5a21e4897ba1006519021d960\",\n\"Credentials\": {\n\"item\":\n[\n{\n\"Guid\":\"97e182ca481443dea87fdd9283f24ff5\"\n},\n{\n\"Guid\":\"00000000000000000000000000000000\"\n}\n]\n},\n\"DoorSideGuid\":\"f578a324a7b748e48b6a21932207cf85\",\n\"SourceTimeZone\":\"Singapore Standard Time\",\n\"EventName\":\"267\",\n\"Coordinates\":\"\",\n\"SourceEntity\":\"f578a324a7b748e48b6a21932207cf85\",\n\"GroupId\":\"9fe919840e6a436e95dbc78a67dc5d03\",\n\"SourceEntityTypes\": {\n\"item\":\n[\n{\n\"EntityType\":\"Area\"\n},\n{\n\"EntityType\":\"Door\"\n},\n{\n\"EntityType\":\"Elevator\"\n}\n]\n},\n\"Timestamp\":\"2023-05-02T08:38:16.1747110Z\",\n\"OfflinePeriod\":\"None\",\n\"Type\":\"AccessGranted\",\n\"RelatedEntities\": {\n\"item\":\n[\n{\n\"Guid\":\"f578a324a7b748e48b6a21932207cf85\"\n}\n]\n}\n},\n\"EventType\":\"AccessGranted\",\n\"SourceGuid\":\"e8fb5f4cfc21496d9c23ba355542685a\",\n\"Timestamp\":\"2023-05-02T08:38:16.1747110Z\",\n\"GroupId\":\"9fe919840e6a436e95dbc78a67dc5d03\"\n}}\n\n ```\n\n### How to enable alarm monitoring\n\nWhen alarm monitoring is enabled, alarms will also be sent to the event stream.\n\n:warning: **Monitoring specific alarms is not supported.**\n\nTo enable alarm monitoring, send the following POST request:\n\n``` http\nPOST /events/alarmMonitoring/on\n\n ```\n\nTo disable alarm monitoring, send the following POST request:\n\n``` http\nPOST /events/alarmMonitoring/off\n\n ```\n\n### How to raise an event\n\nTo raise a event, send the following POST request:\n\n``` http\nPOST /events/RaiseEvent/{eventType}/{entityId}\n\n ```\n\nSimply replace {eventType} with the type of the event and {entityId} with the GUID of the event source entity.\n\n:warning: **Specifying the event timestamp is not currently supported.**\n\n### What events can be raised?\n\n- CameraMotionOn\n    \n- CameraMotionOff\n    \n- CardholderAccessGranted\n    \n- CardholderAccessRefused\n    \n- CustomEvent\n    \n- DoorRexOn\n    \n- DoorRexOff\n    \n- AccessUnknownCredential\n    \n- AccessUnassignedCredential\n    \n- AccessGranted\n    \n- AccessRefused\n    \n- AccessExpiredCredential\n    \n- AccessStolenCredential\n    \n- AccessLostCredential\n    \n- AccessInactiveCredential\n    \n- AccessInactivePerson\n    \n- CardholderDuressPinEntered\n    \n- AreaEvacuationStarted\n    \n- AreaEvacuationEnded\n    \n- AreaMusteringStarted\n    \n- AreaMusteringEnded\n    \n- DoorDoubleBadgeOn\n    \n- DoorDoubleBadgeOff\n    \n- CardholderDoubleBadgeOn\n    \n- CardholderDoubleBadgeOff\n    \n- CredentialDoubleBadgeOn\n    \n- CredentialDoubleBadgeOff\n    \n- VideoAnalyticsAudioAlarm\n    \n- VideoAnalyticsLicensePlateInSight\n    \n- VideoAnalyticsLicensePlateOutofSight\n    \n- VideoAnalyticsLicensePlateReading\n    \n- VideoAnalyticsObjectConditionChange\n    \n- VideoAnalyticsObjectCrossedLine\n    \n- VideoAnalyticsObjectEntered\n    \n- VideoAnalyticsObjectExited\n    \n- VideoAnalyticsObjectFall\n    \n- VideoAnalyticsObjectFollowingRoute\n    \n- VideoAnalyticsObjectInField\n    \n- VideoAnalyticsObjectLeft\n    \n- VideoAnalyticsObjectLoitering\n    \n- VideoAnalyticsObjectMerged\n    \n- VideoAnalyticsObjectRemoved\n    \n- VideoAnalyticsObjectRun\n    \n- VideoAnalyticsObjectSlide\n    \n- VideoAnalyticsObjectSplit\n    \n- VideoAnalyticsObjectStopped\n    \n- VideoAnalyticsTailgating\n    \n- VideoAnalyticsTampering\n    \n- VideoAnalyticsUndefined\n    \n- VideoAnalyticsFaceDetected\n    \n- VideoAnalyticsDirectionAlarm\n    \n- VideoAnalyticsAdaptiveMotion\n    \n- VideoAnalyticsObjectCountReached\n    \n- VideoAnalyticsCrowdDetected\n    \n- VideoAnalyticsFaceRecognized\n    \n- VideoAnalyticsObjectDetected\n    \n- VideoAnalyticsHeatMapChanged\n    \n- VideoAnalyticsObjectVelocityChanged\n    \n- VideoAnalyticsObjectDirectionChanged\n    \n- VideoAnalyticsObjectCountChanged\n    \n- VideoAnalyticsPeopleCounting\n    \n- VideoAnalyticsPeopleCountingAlarm\n    \n- VideoAnalyticsTamperingOff\n    \n- VideoAnalyticsCrowdSize\n    \n- FloorAccess\n    \n- ArchivingStartedOnMotionEvent\n    \n- ArchivingStoppedOnMotionEvent\n    \n- CameraMotion\n    \n- DoorEntryDetected\n    \n- ArchiverFileProtectionSuccess\n    \n- ArchiverFileProtectionFailure\n    \n- AudioAnalyticsCustom\n    \n- DoorScheduledUnlockIgnored\n    \n- ExternalSystemAlarmTriggered\n    \n- ExternalSystemSynchronizationStarted\n    \n- ExternalSystemSynchronizationCompleted\n    \n- ExternalSystemSynchronizationError\n    \n- ExternalSystemSynchronizationpartiallyCompleted\n    \n- UserLoginFailed\n    \n- CameraRtpPacketLostRecovery\n    \n- RecordFusionAutomationRuleHitEvent\n    \n\n### How to identify the events supported by an entity\n\nTo list the supported events of an entity, send the following GET request:\n\n``` http\nGET /entity?q=entity={entity},SupportedEvents\n\n ```\n\nSimply replace {entity} with either the GUID or the logical ID of an entity.\n\nHere is an example of the response:\n\n``` json\n{\n    \"Rsp\": {\n        \"Status\": \"Ok\",\n        \"Result\": {\n            \"SupportedEvents\": [\n                \"EntityWarning\",\n                \"FusionRecordUpdatedEvent\",\n                \"CardholderAccessGranted\",\n                \"CardholderEntryDetected\",\n                \"CardholderEntryAssumed\",\n                \"CardholderNoEntryDetected\",\n                \"CardholderAccessRefused\",\n                \"CardholderInactive\",\n                \"CardholderCredentialExpired\",\n                \"CardholderCredentialInactive\",\n                \"CardholderCredentiallost\",\n                \"CardholderCredentialStolen\",\n                \"CardholderAntipassback\",\n                \"AreaAntipassbackForgiven\",\n                \"CardholderCredentialRequested\",\n                \"CardholderCredentialRequestComplete\",\n                \"CardholderCredentialRequestCancelled\",\n                \"CardholderDuressPinEntered\",\n                \"CardholderDoubleBadgeOn\",\n                \"CardholderDoubleBadgeOff\",\n                \"MissingTailEscort\",\n                \"CardholderSinglePersonCheckFailedNoPresenceDetected\",\n                \"CardholderSinglePersonCheckFailedTooManyPeople\",\n                \"CardholderAccessPointAccessGrantConfirmationRequested\",\n                \"CardholderIdentityValidationSucceededBiometric\",\n                \"CardholderIdentityValidationSucceededManual\",\n                \"CardholderIdentityValidationFailedBiometricMismatch\",\n                \"CardholderIdentityValidationFailedBiometricMissing\",\n                \"CardholderIdentityValidationFailedManual\",\n                \"CardholderIdentityValidationFailedTimeout\",\n                \"AreaCardholderAdded\",\n                \"AreaCardholderRemoved\",\n                \"None\"\n            ]\n        }\n    }\n}\n\n ```"
